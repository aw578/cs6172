user: bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 6, in <module>
sys.path.append(os.path.expanduser("~/bril/examples"))
NameError: name 'os' is not defined
error: Uncaught (in promise) SyntaxError: Unexpected end of JSON input
const prog = JSON.parse(await readStdin()) as bril.Program;
^
at JSON.parse (<anonymous>)
at main (file:///home/nya1025/bril/brili.ts:1020:23)
at eventLoopTick (ext:core/01_core.js:177:7)
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 134, in <module>
main()
File "cs6120/final/gvn.py", line 106, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 33, in find_congruence_classes
for instr in block['instrs']:
TypeError: list indices must be integers or slices, not str
error: Uncaught (in promise) SyntaxError: Unexpected end of JSON input
const prog = JSON.parse(await readStdin()) as bril.Program;
^
at JSON.parse (<anonymous>)
at main (file:///home/nya1025/bril/brili.ts:1020:23)
at eventLoopTick (ext:core/01_core.js:177:7)
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 135, in <module>
main()
File "cs6120/final/gvn.py", line 107, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 34, in find_congruence_classes
for instr in block['instrs']:
TypeError: list indices must be integers or slices, not str
error: Uncaught (in promise) SyntaxError: Unexpected token ''', "['args']
" is not valid JSON
const prog = JSON.parse(await readStdin()) as bril.Program;
^
at JSON.parse (<anonymous>)
at main (file:///home/nya1025/bril/brili.ts:1020:23)
at eventLoopTick (ext:core/01_core.js:177:7)
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3
['args']
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 135, in <module>
main()
File "cs6120/final/gvn.py", line 107, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 34, in find_congruence_classes
for instr in block['instrs']:
TypeError: list indices must be integers or slices, not str
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
<generator object form_blocks at 0x7f7fad0bd660>
['args']
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 136, in <module>
main()
File "cs6120/final/gvn.py", line 108, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 35, in find_congruence_classes
for instr in block['instrs']:
TypeError: list indices must be integers or slices, not str
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
OrderedDict([('b1', [{'op': 'undef', 'type': 'bool', 'dest': 'k_lt_dim2.init'}, {'op': 'undef', 'type': 'int', 'dest': 'k.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'j_lt_dim3.init'}, {'op': 'undef', 'type': 'int', 'dest': 'j.init'}, {'op': 'undef', 'type': 'int', 'dest': 'index.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'i_lt_dim1.init'}, {'op': 'undef', 'type': 'int', 'dest': 'dp_bit.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'dot_product_odd.init'}, {'op': 'undef', 'type': 'int', 'dest': 'dot_product.init'}, {'op': 'undef', 'type': 'int', 'dest': 'b_bit.init'}, {'op': 'undef', 'type': 'int', 'dest': 'a_bit_b_bit.init'}, {'op': 'undef', 'type': 'int', 'dest': 'a_bit.init'}, {'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'dest': 'i.0', 'op': 'const', 'type': 'int', 'value': -1}, {'dest': 'output.0', 'op': 'const', 'type': 'int', 'value': 0}, {'op': 'jmp', 'labels': ['row_loop']}]), ('row_loop', [{'op': 'phi', 'dest': 'output.1', 'type': 'int', 'args': ['output.0', 'output.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'k_lt_dim2.0', 'type': 'bool', 'args': ['k_lt_dim2.init', 'k_lt_dim2.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'k.0', 'type': 'int', 'args': ['k.init', 'k.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'j_lt_dim3.0', 'type': 'bool', 'args': ['j_lt_dim3.init', 'j_lt_dim3.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'j.0', 'type': 'int', 'args': ['j.init', 'j.3', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'index.0', 'type': 'int', 'args': ['index.init', 'index.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'i_lt_dim1.0', 'type': 'bool', 'args': ['i_lt_dim1.init', 'i_lt_dim1.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'i.1', 'type': 'int', 'args': ['i.0', 'i.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dp_bit.0', 'type': 'int', 'args': ['dp_bit.init', 'dp_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dot_product_odd.0', 'type': 'bool', 'args': ['dot_product_odd.init', 'dot_product_odd.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dot_product.0', 'type': 'int', 'args': ['dot_product.init', 'dot_product.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'b_bit.0', 'type': 'int', 'args': ['b_bit.init', 'b_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'a_bit_b_bit.0', 'type': 'int', 'args': ['a_bit_b_bit.init', 'a_bit_b_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'a_bit.0', 'type': 'int', 'args': ['a_bit.init', 'a_bit.1', 'b1', 'col_loop']}, {'dest': 'j.1', 'op': 'const', 'type': 'int', 'value': -1}, {'args': ['i.1', 'one.0'], 'dest': 'i.2', 'op': 'add', 'type': 'int'}, {'args': ['i.2', 'dim1'], 'dest': 'i_lt_dim1.1', 'op': 'lt', 'type': 'bool'}, {'args': ['i_lt_dim1.1'], 'labels': ['col_loop', 'return'], 'op': 'br'}]), ('col_loop', [{'op': 'phi', 'dest': 'output.2', 'type': 'int', 'args': ['output.3', 'output.2', 'output.1', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'k_lt_dim2.1', 'type': 'bool', 'args': ['k_lt_dim2.3', 'k_lt_dim2.3', 'k_lt_dim2.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'k.1', 'type': 'int', 'args': ['k.4', 'k.4', 'k.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'j_lt_dim3.1', 'type': 'bool', 'args': ['j_lt_dim3.2', 'j_lt_dim3.2', 'j_lt_dim3.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'j.2', 'type': 'int', 'args': ['j.3', 'j.3', 'j.1', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'index.1', 'type': 'int', 'args': ['index.2', 'index.1', 'index.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dp_bit.1', 'type': 'int', 'args': ['dp_bit.2', 'dp_bit.1', 'dp_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dot_product_odd.1', 'type': 'bool', 'args': ['dot_product_odd.2', 'dot_product_odd.2', 'dot_product_odd.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dot_product.1', 'type': 'int', 'args': ['dot_product.3', 'dot_product.3', 'dot_product.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'b_bit.1', 'type': 'int', 'args': ['b_bit.2', 'b_bit.2', 'b_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'a_bit_b_bit.1', 'type': 'int', 'args': ['a_bit_b_bit.2', 'a_bit_b_bit.2', 'a_bit_b_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'a_bit.1', 'type': 'int', 'args': ['a_bit.2', 'a_bit.2', 'a_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'dest': 'k.2', 'op': 'const', 'type': 'int', 'value': -1}, {'args': ['j.2', 'one.0'], 'dest': 'j.3', 'op': 'add', 'type': 'int'}, {'dest': 'dot_product.2', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['j.3', 'dim3'], 'dest': 'j_lt_dim3.2', 'op': 'lt', 'type': 'bool'}, {'args': ['j_lt_dim3.2'], 'labels': ['inner_loop', 'row_loop'], 'op': 'br'}]), ('inner_loop', [{'op': 'phi', 'dest': 'k_lt_dim2.2', 'type': 'bool', 'args': ['k_lt_dim2.1', 'k_lt_dim2.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'k.3', 'type': 'int', 'args': ['k.2', 'k.4', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'dot_product.3', 'type': 'int', 'args': ['dot_product.2', 'dot_product.4', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'b_bit.2', 'type': 'int', 'args': ['b_bit.1', 'b_bit.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'a_bit_b_bit.2', 'type': 'int', 'args': ['a_bit_b_bit.1', 'a_bit_b_bit.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'a_bit.2', 'type': 'int', 'args': ['a_bit.1', 'a_bit.3', 'col_loop', 'multiply']}, {'args': ['k.3', 'one.0'], 'dest': 'k.4', 'op': 'add', 'type': 'int'}, {'args': ['k.4', 'dim2'], 'dest': 'k_lt_dim2.3', 'op': 'lt', 'type': 'bool'}, {'args': ['k_lt_dim2.3'], 'labels': ['multiply', 'end_col'], 'op': 'br'}]), ('multiply', [{'args': ['a', 'dim2', 'i.2', 'k.4'], 'dest': 'a_bit.3', 'funcs': ['mat_bitsel'], 'op': 'call', 'type': 'int'}, {'args': ['b', 'dim3', 'k.4', 'j.3'], 'dest': 'b_bit.3', 'funcs': ['mat_bitsel'], 'op': 'call', 'type': 'int'}, {'args': ['a_bit.3', 'b_bit.3'], 'dest': 'a_bit_b_bit.3', 'op': 'mul', 'type': 'int'}, {'args': ['dot_product.3', 'a_bit_b_bit.3'], 'dest': 'dot_product.4', 'op': 'add', 'type': 'int'}, {'labels': ['inner_loop'], 'op': 'jmp'}]), ('end_col', [{'args': ['dot_product.3'], 'dest': 'dot_product_odd.2', 'funcs': ['is_odd'], 'op': 'call', 'type': 'bool'}, {'args': ['dot_product_odd.2'], 'labels': ['add_dp', 'col_loop'], 'op': 'br'}]), ('add_dp', [{'args': ['i.2', 'j.3', 'dim3'], 'dest': 'index.2', 'funcs': ['mat_packed_index'], 'op': 'call', 'type': 'int'}, {'args': ['index.2'], 'dest': 'dp_bit.2', 'funcs': ['pow2'], 'op': 'call', 'type': 'int'}, {'args': ['output.2', 'dp_bit.2'], 'dest': 'output.3', 'op': 'add', 'type': 'int'}, {'labels': ['col_loop'], 'op': 'jmp'}]), ('return', [{'args': ['output.1'], 'op': 'print'}, {'op': 'ret', 'args': []}])])
b1
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 136, in <module>
main()
File "cs6120/final/gvn.py", line 108, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 35, in find_congruence_classes
for instr in block['instrs']:
TypeError: string indices must be integers
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
b1
row_loop
col_loop
inner_loop
multiply
end_col
add_dp
return
b1
ret_one
ret_zero
b1
b1
loop
multiply
return
b1
loop
divide
return
b1
negative
positive
b1
b1
{
"functions": [
{
"args": [
{
"name": "a",
"type": "int"
},
{
"name": "b",
"type": "int"
},
{
"name": "dim1",
"type": "int"
},
{
"name": "dim2",
"type": "int"
},
{
"name": "dim3",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "k_lt_dim2.init",
"op": "undef",
"type": "bool"
},
{
"dest": "k.init",
"op": "undef",
"type": "int"
},
{
"dest": "j_lt_dim3.init",
"op": "undef",
"type": "bool"
},
{
"dest": "j.init",
"op": "undef",
"type": "int"
},
{
"dest": "index.init",
"op": "undef",
"type": "int"
},
{
"dest": "i_lt_dim1.init",
"op": "undef",
"type": "bool"
},
{
"dest": "dp_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "dot_product_odd.init",
"op": "undef",
"type": "bool"
},
{
"dest": "dot_product.init",
"op": "undef",
"type": "int"
},
{
"dest": "b_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "a_bit_b_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "a_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"dest": "dot_product.2",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"dot_product.2"
],
"dest": "output.1",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.init"
],
"dest": "k_lt_dim2.0",
"op": "id",
"type": "bool"
},
{
"args": [
"k.init"
],
"dest": "k.0",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.init"
],
"dest": "j_lt_dim3.0",
"op": "id",
"type": "bool"
},
{
"args": [
"j.init"
],
"dest": "j.0",
"op": "id",
"type": "int"
},
{
"args": [
"index.init"
],
"dest": "index.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.init"
],
"dest": "i_lt_dim1.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.init"
],
"dest": "dp_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.init"
],
"dest": "dot_product_odd.0",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.init"
],
"dest": "dot_product.0",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.init"
],
"dest": "b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.init"
],
"dest": "a_bit_b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.init"
],
"dest": "a_bit.0",
"op": "id",
"type": "int"
},
{
"labels": [
"row_loop"
],
"op": "jmp"
},
{
"label": "row_loop"
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"i.2",
"dim1"
],
"dest": "i_lt_dim1.1",
"op": "lt",
"type": "bool"
},
{
"args": [
"output.1"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.0"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"k.0"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.0"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.0"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.0"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.0"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.0"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.0"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.0"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.0"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.1"
],
"labels": [
"col_loop",
"return"
],
"op": "br"
},
{
"label": "col_loop"
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"args": [
"j.2",
"one.0"
],
"dest": "j.3",
"op": "add",
"type": "int"
},
{
"dest": "dot_product.2",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"j.3",
"dim3"
],
"dest": "j_lt_dim3.2",
"op": "lt",
"type": "bool"
},
{
"args": [
"output.2"
],
"dest": "output.1",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.1"
],
"dest": "k_lt_dim2.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "k.0",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.0",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.0",
"op": "id",
"type": "int"
},
{
"args": [
"index.1"
],
"dest": "index.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.1"
],
"dest": "i_lt_dim1.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.1"
],
"dest": "dp_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.1"
],
"dest": "dot_product_odd.0",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.2"
],
"dest": "dot_product.0",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.1"
],
"dest": "b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.1"
],
"dest": "a_bit_b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.1"
],
"dest": "a_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.1"
],
"dest": "k_lt_dim2.2",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product.2"
],
"dest": "dot_product.3",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.1"
],
"dest": "b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.1"
],
"dest": "a_bit_b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.1"
],
"dest": "a_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"labels": [
"inner_loop",
"row_loop"
],
"op": "br"
},
{
"label": "inner_loop"
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"i.2",
"dim2"
],
"dest": "k_lt_dim2.3",
"op": "lt",
"type": "bool"
},
{
"args": [
"k_lt_dim2.3"
],
"labels": [
"multiply",
"end_col"
],
"op": "br"
},
{
"label": "multiply"
},
{
"args": [
"a",
"dim2",
"i.2",
"i.2"
],
"dest": "a_bit.3",
"funcs": [
"mat_bitsel"
],
"op": "call",
"type": "int"
},
{
"args": [
"b",
"dim3",
"i.2",
"j.3"
],
"dest": "b_bit.3",
"funcs": [
"mat_bitsel"
],
"op": "call",
"type": "int"
},
{
"args": [
"a_bit.3",
"b_bit.3"
],
"dest": "a_bit_b_bit.3",
"op": "mul",
"type": "int"
},
{
"args": [
"a_bit_b_bit.3",
"dot_product.3"
],
"dest": "dot_product.4",
"op": "add",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.2",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product.4"
],
"dest": "dot_product.3",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.3"
],
"dest": "b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.3"
],
"dest": "a_bit_b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.3"
],
"dest": "a_bit.2",
"op": "id",
"type": "int"
},
{
"labels": [
"inner_loop"
],
"op": "jmp"
},
{
"label": "end_col"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product_odd.2",
"funcs": [
"is_odd"
],
"op": "call",
"type": "bool"
},
{
"args": [
"output.2"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.1"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.1"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.2"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.2"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.2"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"labels": [
"add_dp",
"col_loop"
],
"op": "br"
},
{
"label": "add_dp"
},
{
"args": [
"i.2",
"j.3",
"dim3"
],
"dest": "index.2",
"funcs": [
"mat_packed_index"
],
"op": "call",
"type": "int"
},
{
"args": [
"index.2"
],
"dest": "dp_bit.2",
"funcs": [
"pow2"
],
"op": "call",
"type": "int"
},
{
"args": [
"dp_bit.2",
"output.2"
],
"dest": "output.3",
"op": "add",
"type": "int"
},
{
"args": [
"output.3"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.2"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.2"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.2"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.2"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.2"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"labels": [
"col_loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"output.1"
],
"op": "print"
},
{
"args": [],
"op": "ret"
}
],
"name": "main"
},
{
"args": [
{
"name": "m",
"type": "int"
},
{
"name": "cols",
"type": "int"
},
{
"name": "i",
"type": "int"
},
{
"name": "j",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"i",
"j",
"cols"
],
"dest": "index.0",
"funcs": [
"mat_packed_index"
],
"op": "call",
"type": "int"
},
{
"args": [
"m",
"index.0"
],
"dest": "ret_val.0",
"funcs": [
"bitsel"
],
"op": "call",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"labels": [
"ret_one",
"ret_zero"
],
"op": "br"
},
{
"label": "ret_one"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"args": [
"one.0"
],
"op": "ret"
},
{
"label": "ret_zero"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"zero.0"
],
"op": "ret"
}
],
"name": "mat_bitsel",
"type": "int"
},
{
"args": [
{
"name": "i",
"type": "int"
},
{
"name": "j",
"type": "int"
},
{
"name": "cols",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"cols",
"i"
],
"dest": "index.0",
"op": "mul",
"type": "int"
},
{
"args": [
"index.0",
"j"
],
"dest": "index.1",
"op": "add",
"type": "int"
},
{
"args": [
"index.1"
],
"op": "ret"
}
],
"name": "mat_packed_index",
"type": "int"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "i_lt_n.init",
"op": "undef",
"type": "bool"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": 0
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"args": [
"one.0"
],
"dest": "result.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_n.init"
],
"dest": "i_lt_n.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "loop"
},
{
"args": [
"i.1",
"n"
],
"dest": "i_lt_n.1",
"op": "lt",
"type": "bool"
},
{
"args": [
"i_lt_n.1"
],
"labels": [
"multiply",
"return"
],
"op": "br"
},
{
"label": "multiply"
},
{
"args": [
"result.1",
"two.0"
],
"dest": "result.2",
"op": "mul",
"type": "int"
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"result.2"
],
"dest": "result.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_n.1"
],
"dest": "i_lt_n.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"result.1"
],
"op": "ret"
}
],
"name": "pow2",
"type": "int"
},
{
"args": [
{
"name": "m",
"type": "int"
},
{
"name": "i",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "i_eq_zero.init",
"op": "undef",
"type": "bool"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"args": [
"m"
],
"dest": "m.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_eq_zero.init"
],
"dest": "i_eq_zero.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i"
],
"dest": "i.0",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "loop"
},
{
"args": [
"i.0",
"zero.0"
],
"dest": "i_eq_zero.1",
"op": "eq",
"type": "bool"
},
{
"args": [
"i_eq_zero.1"
],
"labels": [
"return",
"divide"
],
"op": "br"
},
{
"label": "divide"
},
{
"args": [
"m.0",
"two.0"
],
"dest": "m.1",
"op": "div",
"type": "int"
},
{
"args": [
"i.0",
"one.0"
],
"dest": "i.1",
"op": "sub",
"type": "int"
},
{
"args": [
"m.1"
],
"dest": "m.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_eq_zero.1"
],
"dest": "i_eq_zero.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.1"
],
"dest": "i.0",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"m.0"
],
"dest": "m_bit.0",
"funcs": [
"is_odd"
],
"op": "call",
"type": "bool"
},
{
"args": [
"m_bit.0"
],
"op": "ret"
}
],
"name": "bitsel",
"type": "bool"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"n",
"zero.0"
],
"dest": "is_neg.0",
"op": "lt",
"type": "bool"
},
{
"args": [
"n"
],
"dest": "n.1",
"op": "id",
"type": "int"
},
{
"args": [
"is_neg.0"
],
"labels": [
"negative",
"positive"
],
"op": "br"
},
{
"label": "negative"
},
{
"args": [
"zero.0",
"n"
],
"dest": "n.0",
"op": "sub",
"type": "int"
},
{
"args": [
"n.0"
],
"dest": "n.1",
"op": "id",
"type": "int"
},
{
"labels": [
"positive"
],
"op": "jmp"
},
{
"label": "positive"
},
{
"args": [
"n.1"
],
"op": "ret"
}
],
"name": "abs",
"type": "int"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"n"
],
"dest": "n0.0",
"funcs": [
"abs"
],
"op": "call",
"type": "int"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"args": [
"n0.0",
"one.0"
],
"dest": "np1.0",
"op": "add",
"type": "int"
},
{
"args": [
"n0.0",
"two.0"
],
"dest": "half.0",
"op": "div",
"type": "int"
},
{
"args": [
"np1.0",
"two.0"
],
"dest": "np1_half.0",
"op": "div",
"type": "int"
},
{
"args": [
"half.0",
"np1_half.0"
],
"dest": "ret_val.0",
"op": "eq",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"op": "ret"
}
],
"name": "is_even",
"type": "bool"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"n"
],
"dest": "is_even.0",
"funcs": [
"is_even"
],
"op": "call",
"type": "bool"
},
{
"args": [
"is_even.0"
],
"dest": "ret_val.0",
"op": "not",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"op": "ret"
}
],
"name": "is_odd",
"type": "bool"
}
]
}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
^C
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
error: Uncaught (in promise) SyntaxError: Unexpected token 'p', "phi_main
p"... is not valid JSON
const prog = JSON.parse(await readStdin()) as bril.Program;
^
at JSON.parse (<anonymous>)
at main (file:///home/nya1025/bril/brili.ts:1020:23)
at eventLoopTick (ext:core/01_core.js:177:7)
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_pow2
phi_pow2
phi_pow2
phi_bitsel
phi_bitsel
phi_bitsel
phi_abs
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
error: Uncaught (in promise) SyntaxError: Unexpected end of JSON input
const prog = JSON.parse(await readStdin()) as bril.Program;
^
at JSON.parse (<anonymous>)
at main (file:///home/nya1025/bril/brili.ts:1020:23)
at eventLoopTick (ext:core/01_core.js:177:7)
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
^C
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_pow2
phi_pow2
phi_pow2
phi_bitsel
phi_bitsel
phi_bitsel
phi_abs
{
"functions": [
{
"args": [
{
"name": "a",
"type": "int"
},
{
"name": "b",
"type": "int"
},
{
"name": "dim1",
"type": "int"
},
{
"name": "dim2",
"type": "int"
},
{
"name": "dim3",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "k_lt_dim2.init",
"op": "undef",
"type": "bool"
},
{
"dest": "k.init",
"op": "undef",
"type": "int"
},
{
"dest": "j_lt_dim3.init",
"op": "undef",
"type": "bool"
},
{
"dest": "j.init",
"op": "undef",
"type": "int"
},
{
"dest": "index.init",
"op": "undef",
"type": "int"
},
{
"dest": "i_lt_dim1.init",
"op": "undef",
"type": "bool"
},
{
"dest": "dp_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "dot_product_odd.init",
"op": "undef",
"type": "bool"
},
{
"dest": "dot_product.init",
"op": "undef",
"type": "int"
},
{
"dest": "b_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "a_bit_b_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "a_bit.init",
"op": "undef",
"type": "int"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"dest": "dot_product.2",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"dot_product.2"
],
"dest": "output.1",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.init"
],
"dest": "k_lt_dim2.0",
"op": "id",
"type": "bool"
},
{
"args": [
"k.init"
],
"dest": "k.0",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.init"
],
"dest": "j_lt_dim3.0",
"op": "id",
"type": "bool"
},
{
"args": [
"j.init"
],
"dest": "j.0",
"op": "id",
"type": "int"
},
{
"args": [
"index.init"
],
"dest": "index.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.init"
],
"dest": "i_lt_dim1.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.init"
],
"dest": "dp_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.init"
],
"dest": "dot_product_odd.0",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.init"
],
"dest": "dot_product.0",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.init"
],
"dest": "b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.init"
],
"dest": "a_bit_b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.init"
],
"dest": "a_bit.0",
"op": "id",
"type": "int"
},
{
"labels": [
"row_loop"
],
"op": "jmp"
},
{
"label": "row_loop"
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"i.2",
"dim1"
],
"dest": "i_lt_dim1.1",
"op": "lt",
"type": "bool"
},
{
"args": [
"output.1"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.0"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"k.0"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.0"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.0"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.0"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.0"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.0"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.0"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.0"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.0"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.1"
],
"labels": [
"col_loop",
"return"
],
"op": "br"
},
{
"label": "col_loop"
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": -1
},
{
"args": [
"j.2",
"one.0"
],
"dest": "j.3",
"op": "add",
"type": "int"
},
{
"dest": "dot_product.2",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"j.3",
"dim3"
],
"dest": "j_lt_dim3.2",
"op": "lt",
"type": "bool"
},
{
"args": [
"output.2"
],
"dest": "output.1",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.1"
],
"dest": "k_lt_dim2.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "k.0",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.0",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.0",
"op": "id",
"type": "int"
},
{
"args": [
"index.1"
],
"dest": "index.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_dim1.1"
],
"dest": "i_lt_dim1.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.1"
],
"dest": "dp_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.1"
],
"dest": "dot_product_odd.0",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.2"
],
"dest": "dot_product.0",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.1"
],
"dest": "b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.1"
],
"dest": "a_bit_b_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.1"
],
"dest": "a_bit.0",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.1"
],
"dest": "k_lt_dim2.2",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product.2"
],
"dest": "dot_product.3",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.1"
],
"dest": "b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.1"
],
"dest": "a_bit_b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.1"
],
"dest": "a_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"labels": [
"inner_loop",
"row_loop"
],
"op": "br"
},
{
"label": "inner_loop"
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"i.2",
"dim2"
],
"dest": "k_lt_dim2.3",
"op": "lt",
"type": "bool"
},
{
"args": [
"k_lt_dim2.3"
],
"labels": [
"multiply",
"end_col"
],
"op": "br"
},
{
"label": "multiply"
},
{
"args": [
"a",
"dim2",
"i.2",
"i.2"
],
"dest": "a_bit.3",
"funcs": [
"mat_bitsel"
],
"op": "call",
"type": "int"
},
{
"args": [
"b",
"dim3",
"i.2",
"j.3"
],
"dest": "b_bit.3",
"funcs": [
"mat_bitsel"
],
"op": "call",
"type": "int"
},
{
"args": [
"a_bit.3",
"b_bit.3"
],
"dest": "a_bit_b_bit.3",
"op": "mul",
"type": "int"
},
{
"args": [
"a_bit_b_bit.3",
"dot_product.3"
],
"dest": "dot_product.4",
"op": "add",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.2",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product.4"
],
"dest": "dot_product.3",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.3"
],
"dest": "b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.3"
],
"dest": "a_bit_b_bit.2",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.3"
],
"dest": "a_bit.2",
"op": "id",
"type": "int"
},
{
"labels": [
"inner_loop"
],
"op": "jmp"
},
{
"label": "end_col"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product_odd.2",
"funcs": [
"is_odd"
],
"op": "call",
"type": "bool"
},
{
"args": [
"output.2"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.1"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.1"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.2"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.2"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.2"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"labels": [
"add_dp",
"col_loop"
],
"op": "br"
},
{
"label": "add_dp"
},
{
"args": [
"i.2",
"j.3",
"dim3"
],
"dest": "index.2",
"funcs": [
"mat_packed_index"
],
"op": "call",
"type": "int"
},
{
"args": [
"index.2"
],
"dest": "dp_bit.2",
"funcs": [
"pow2"
],
"op": "call",
"type": "int"
},
{
"args": [
"dp_bit.2",
"output.2"
],
"dest": "output.3",
"op": "add",
"type": "int"
},
{
"args": [
"output.3"
],
"dest": "output.2",
"op": "id",
"type": "int"
},
{
"args": [
"k_lt_dim2.3"
],
"dest": "k_lt_dim2.1",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "k.1",
"op": "id",
"type": "int"
},
{
"args": [
"j_lt_dim3.2"
],
"dest": "j_lt_dim3.1",
"op": "id",
"type": "bool"
},
{
"args": [
"j.3"
],
"dest": "j.2",
"op": "id",
"type": "int"
},
{
"args": [
"index.2"
],
"dest": "index.1",
"op": "id",
"type": "int"
},
{
"args": [
"dp_bit.2"
],
"dest": "dp_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"dot_product_odd.2"
],
"dest": "dot_product_odd.1",
"op": "id",
"type": "bool"
},
{
"args": [
"dot_product.3"
],
"dest": "dot_product.1",
"op": "id",
"type": "int"
},
{
"args": [
"b_bit.2"
],
"dest": "b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit_b_bit.2"
],
"dest": "a_bit_b_bit.1",
"op": "id",
"type": "int"
},
{
"args": [
"a_bit.2"
],
"dest": "a_bit.1",
"op": "id",
"type": "int"
},
{
"labels": [
"col_loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"output.1"
],
"op": "print"
},
{
"args": [],
"op": "ret"
}
],
"name": "main"
},
{
"args": [
{
"name": "m",
"type": "int"
},
{
"name": "cols",
"type": "int"
},
{
"name": "i",
"type": "int"
},
{
"name": "j",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"i",
"j",
"cols"
],
"dest": "index.0",
"funcs": [
"mat_packed_index"
],
"op": "call",
"type": "int"
},
{
"args": [
"m",
"index.0"
],
"dest": "ret_val.0",
"funcs": [
"bitsel"
],
"op": "call",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"labels": [
"ret_one",
"ret_zero"
],
"op": "br"
},
{
"label": "ret_one"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"args": [
"one.0"
],
"op": "ret"
},
{
"label": "ret_zero"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"zero.0"
],
"op": "ret"
}
],
"name": "mat_bitsel",
"type": "int"
},
{
"args": [
{
"name": "i",
"type": "int"
},
{
"name": "j",
"type": "int"
},
{
"name": "cols",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"cols",
"i"
],
"dest": "index.0",
"op": "mul",
"type": "int"
},
{
"args": [
"index.0",
"j"
],
"dest": "index.1",
"op": "add",
"type": "int"
},
{
"args": [
"index.1"
],
"op": "ret"
}
],
"name": "mat_packed_index",
"type": "int"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "i_lt_n.init",
"op": "undef",
"type": "bool"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"dest": "i.0",
"op": "const",
"type": "int",
"value": 0
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"args": [
"one.0"
],
"dest": "result.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_n.init"
],
"dest": "i_lt_n.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.0"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "loop"
},
{
"args": [
"i.1",
"n"
],
"dest": "i_lt_n.1",
"op": "lt",
"type": "bool"
},
{
"args": [
"i_lt_n.1"
],
"labels": [
"multiply",
"return"
],
"op": "br"
},
{
"label": "multiply"
},
{
"args": [
"result.1",
"two.0"
],
"dest": "result.2",
"op": "mul",
"type": "int"
},
{
"args": [
"i.1",
"one.0"
],
"dest": "i.2",
"op": "add",
"type": "int"
},
{
"args": [
"result.2"
],
"dest": "result.1",
"op": "id",
"type": "int"
},
{
"args": [
"i_lt_n.1"
],
"dest": "i_lt_n.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.2"
],
"dest": "i.1",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"result.1"
],
"op": "ret"
}
],
"name": "pow2",
"type": "int"
},
{
"args": [
{
"name": "m",
"type": "int"
},
{
"name": "i",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "i_eq_zero.init",
"op": "undef",
"type": "bool"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"args": [
"m"
],
"dest": "m.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_eq_zero.init"
],
"dest": "i_eq_zero.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i"
],
"dest": "i.0",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "loop"
},
{
"args": [
"i.0",
"zero.0"
],
"dest": "i_eq_zero.1",
"op": "eq",
"type": "bool"
},
{
"args": [
"i_eq_zero.1"
],
"labels": [
"return",
"divide"
],
"op": "br"
},
{
"label": "divide"
},
{
"args": [
"m.0",
"two.0"
],
"dest": "m.1",
"op": "div",
"type": "int"
},
{
"args": [
"i.0",
"one.0"
],
"dest": "i.1",
"op": "sub",
"type": "int"
},
{
"args": [
"m.1"
],
"dest": "m.0",
"op": "id",
"type": "int"
},
{
"args": [
"i_eq_zero.1"
],
"dest": "i_eq_zero.0",
"op": "id",
"type": "bool"
},
{
"args": [
"i.1"
],
"dest": "i.0",
"op": "id",
"type": "int"
},
{
"labels": [
"loop"
],
"op": "jmp"
},
{
"label": "return"
},
{
"args": [
"m.0"
],
"dest": "m_bit.0",
"funcs": [
"is_odd"
],
"op": "call",
"type": "bool"
},
{
"args": [
"m_bit.0"
],
"op": "ret"
}
],
"name": "bitsel",
"type": "bool"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"dest": "zero.0",
"op": "const",
"type": "int",
"value": 0
},
{
"args": [
"n",
"zero.0"
],
"dest": "is_neg.0",
"op": "lt",
"type": "bool"
},
{
"args": [
"n"
],
"dest": "n.1",
"op": "id",
"type": "int"
},
{
"args": [
"is_neg.0"
],
"labels": [
"negative",
"positive"
],
"op": "br"
},
{
"label": "negative"
},
{
"args": [
"zero.0",
"n"
],
"dest": "n.0",
"op": "sub",
"type": "int"
},
{
"args": [
"n.0"
],
"dest": "n.1",
"op": "id",
"type": "int"
},
{
"labels": [
"positive"
],
"op": "jmp"
},
{
"label": "positive"
},
{
"args": [
"n.1"
],
"op": "ret"
}
],
"name": "abs",
"type": "int"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"n"
],
"dest": "n0.0",
"funcs": [
"abs"
],
"op": "call",
"type": "int"
},
{
"dest": "one.0",
"op": "const",
"type": "int",
"value": 1
},
{
"dest": "two.0",
"op": "const",
"type": "int",
"value": 2
},
{
"args": [
"n0.0",
"one.0"
],
"dest": "np1.0",
"op": "add",
"type": "int"
},
{
"args": [
"n0.0",
"two.0"
],
"dest": "half.0",
"op": "div",
"type": "int"
},
{
"args": [
"np1.0",
"two.0"
],
"dest": "np1_half.0",
"op": "div",
"type": "int"
},
{
"args": [
"half.0",
"np1_half.0"
],
"dest": "ret_val.0",
"op": "eq",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"op": "ret"
}
],
"name": "is_even",
"type": "bool"
},
{
"args": [
{
"name": "n",
"type": "int"
}
],
"instrs": [
{
"label": "b1"
},
{
"args": [
"n"
],
"dest": "is_even.0",
"funcs": [
"is_even"
],
"op": "call",
"type": "bool"
},
{
"args": [
"is_even.0"
],
"dest": "ret_val.0",
"op": "not",
"type": "bool"
},
{
"args": [
"ret_val.0"
],
"op": "ret"
}
],
"name": "is_odd",
"type": "bool"
}
]
}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_main
phi_pow2
phi_pow2
phi_pow2
phi_bitsel
phi_bitsel
phi_bitsel
phi_abs
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 136, in <module>
main()
File "cs6120/final/gvn.py", line 108, in main
congruence_classes = find_congruence_classes(func)
File "cs6120/final/gvn.py", line 49, in find_congruence_classes
block_label = block_labels[dest]
KeyError: 'output.1'
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
{}
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
{}
{}
{}
phi_None
phi_None
phi_None
{}
phi_None
phi_None
phi_None
{}
phi_None
{}
{}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
b1
row_loop
col_loop
inner_loop
multiply
end_col
add_dp
return
{}
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
b1
ret_one
ret_zero
{}
b1
{}
b1
loop
multiply
return
{}
phi_None
phi_None
phi_None
b1
loop
divide
return
{}
phi_None
phi_None
phi_None
b1
negative
positive
{}
phi_None
b1
{}
b1
{}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
<generator object form_blocks at 0x7ff1171fe660>
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (2.2.3) or chardet (3.0.4) doesn't match a supported version!
warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Traceback (most recent call last):
File "cs6120/final/gvn.py", line 141, in <module>
main()
File "cs6120/final/gvn.py", line 117, in main
for class_vars in congruence_classes.values():
AttributeError: 'NoneType' object has no attribute 'values'
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
OrderedDict([('b1', [{'op': 'undef', 'type': 'bool', 'dest': 'k_lt_dim2.init'}, {'op': 'undef', 'type': 'int', 'dest': 'k.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'j_lt_dim3.init'}, {'op': 'undef', 'type': 'int', 'dest': 'j.init'}, {'op': 'undef', 'type': 'int', 'dest': 'index.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'i_lt_dim1.init'}, {'op': 'undef', 'type': 'int', 'dest': 'dp_bit.init'}, {'op': 'undef', 'type': 'bool', 'dest': 'dot_product_odd.init'}, {'op': 'undef', 'type': 'int', 'dest': 'dot_product.init'}, {'op': 'undef', 'type': 'int', 'dest': 'b_bit.init'}, {'op': 'undef', 'type': 'int', 'dest': 'a_bit_b_bit.init'}, {'op': 'undef', 'type': 'int', 'dest': 'a_bit.init'}, {'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'dest': 'i.0', 'op': 'const', 'type': 'int', 'value': -1}, {'dest': 'output.0', 'op': 'const', 'type': 'int', 'value': 0}, {'op': 'jmp', 'labels': ['row_loop']}]), ('row_loop', [{'op': 'phi', 'dest': 'output.1', 'type': 'int', 'args': ['output.0', 'output.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'k_lt_dim2.0', 'type': 'bool', 'args': ['k_lt_dim2.init', 'k_lt_dim2.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'k.0', 'type': 'int', 'args': ['k.init', 'k.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'j_lt_dim3.0', 'type': 'bool', 'args': ['j_lt_dim3.init', 'j_lt_dim3.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'j.0', 'type': 'int', 'args': ['j.init', 'j.3', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'index.0', 'type': 'int', 'args': ['index.init', 'index.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'i_lt_dim1.0', 'type': 'bool', 'args': ['i_lt_dim1.init', 'i_lt_dim1.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'i.1', 'type': 'int', 'args': ['i.0', 'i.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dp_bit.0', 'type': 'int', 'args': ['dp_bit.init', 'dp_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dot_product_odd.0', 'type': 'bool', 'args': ['dot_product_odd.init', 'dot_product_odd.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'dot_product.0', 'type': 'int', 'args': ['dot_product.init', 'dot_product.2', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'b_bit.0', 'type': 'int', 'args': ['b_bit.init', 'b_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'a_bit_b_bit.0', 'type': 'int', 'args': ['a_bit_b_bit.init', 'a_bit_b_bit.1', 'b1', 'col_loop']}, {'op': 'phi', 'dest': 'a_bit.0', 'type': 'int', 'args': ['a_bit.init', 'a_bit.1', 'b1', 'col_loop']}, {'dest': 'j.1', 'op': 'const', 'type': 'int', 'value': -1}, {'args': ['i.1', 'one.0'], 'dest': 'i.2', 'op': 'add', 'type': 'int'}, {'args': ['i.2', 'dim1'], 'dest': 'i_lt_dim1.1', 'op': 'lt', 'type': 'bool'}, {'args': ['i_lt_dim1.1'], 'labels': ['col_loop', 'return'], 'op': 'br'}]), ('col_loop', [{'op': 'phi', 'dest': 'output.2', 'type': 'int', 'args': ['output.3', 'output.2', 'output.1', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'k_lt_dim2.1', 'type': 'bool', 'args': ['k_lt_dim2.3', 'k_lt_dim2.3', 'k_lt_dim2.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'k.1', 'type': 'int', 'args': ['k.4', 'k.4', 'k.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'j_lt_dim3.1', 'type': 'bool', 'args': ['j_lt_dim3.2', 'j_lt_dim3.2', 'j_lt_dim3.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'j.2', 'type': 'int', 'args': ['j.3', 'j.3', 'j.1', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'index.1', 'type': 'int', 'args': ['index.2', 'index.1', 'index.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dp_bit.1', 'type': 'int', 'args': ['dp_bit.2', 'dp_bit.1', 'dp_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dot_product_odd.1', 'type': 'bool', 'args': ['dot_product_odd.2', 'dot_product_odd.2', 'dot_product_odd.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'dot_product.1', 'type': 'int', 'args': ['dot_product.3', 'dot_product.3', 'dot_product.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'b_bit.1', 'type': 'int', 'args': ['b_bit.2', 'b_bit.2', 'b_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'a_bit_b_bit.1', 'type': 'int', 'args': ['a_bit_b_bit.2', 'a_bit_b_bit.2', 'a_bit_b_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'op': 'phi', 'dest': 'a_bit.1', 'type': 'int', 'args': ['a_bit.2', 'a_bit.2', 'a_bit.0', 'add_dp', 'end_col', 'row_loop']}, {'dest': 'k.2', 'op': 'const', 'type': 'int', 'value': -1}, {'args': ['j.2', 'one.0'], 'dest': 'j.3', 'op': 'add', 'type': 'int'}, {'dest': 'dot_product.2', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['j.3', 'dim3'], 'dest': 'j_lt_dim3.2', 'op': 'lt', 'type': 'bool'}, {'args': ['j_lt_dim3.2'], 'labels': ['inner_loop', 'row_loop'], 'op': 'br'}]), ('inner_loop', [{'op': 'phi', 'dest': 'k_lt_dim2.2', 'type': 'bool', 'args': ['k_lt_dim2.1', 'k_lt_dim2.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'k.3', 'type': 'int', 'args': ['k.2', 'k.4', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'dot_product.3', 'type': 'int', 'args': ['dot_product.2', 'dot_product.4', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'b_bit.2', 'type': 'int', 'args': ['b_bit.1', 'b_bit.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'a_bit_b_bit.2', 'type': 'int', 'args': ['a_bit_b_bit.1', 'a_bit_b_bit.3', 'col_loop', 'multiply']}, {'op': 'phi', 'dest': 'a_bit.2', 'type': 'int', 'args': ['a_bit.1', 'a_bit.3', 'col_loop', 'multiply']}, {'args': ['k.3', 'one.0'], 'dest': 'k.4', 'op': 'add', 'type': 'int'}, {'args': ['k.4', 'dim2'], 'dest': 'k_lt_dim2.3', 'op': 'lt', 'type': 'bool'}, {'args': ['k_lt_dim2.3'], 'labels': ['multiply', 'end_col'], 'op': 'br'}]), ('multiply', [{'args': ['a', 'dim2', 'i.2', 'k.4'], 'dest': 'a_bit.3', 'funcs': ['mat_bitsel'], 'op': 'call', 'type': 'int'}, {'args': ['b', 'dim3', 'k.4', 'j.3'], 'dest': 'b_bit.3', 'funcs': ['mat_bitsel'], 'op': 'call', 'type': 'int'}, {'args': ['a_bit.3', 'b_bit.3'], 'dest': 'a_bit_b_bit.3', 'op': 'mul', 'type': 'int'}, {'args': ['dot_product.3', 'a_bit_b_bit.3'], 'dest': 'dot_product.4', 'op': 'add', 'type': 'int'}, {'labels': ['inner_loop'], 'op': 'jmp'}]), ('end_col', [{'args': ['dot_product.3'], 'dest': 'dot_product_odd.2', 'funcs': ['is_odd'], 'op': 'call', 'type': 'bool'}, {'args': ['dot_product_odd.2'], 'labels': ['add_dp', 'col_loop'], 'op': 'br'}]), ('add_dp', [{'args': ['i.2', 'j.3', 'dim3'], 'dest': 'index.2', 'funcs': ['mat_packed_index'], 'op': 'call', 'type': 'int'}, {'args': ['index.2'], 'dest': 'dp_bit.2', 'funcs': ['pow2'], 'op': 'call', 'type': 'int'}, {'args': ['output.2', 'dp_bit.2'], 'dest': 'output.3', 'op': 'add', 'type': 'int'}, {'labels': ['col_loop'], 'op': 'jmp'}]), ('return', [{'args': ['output.1'], 'op': 'print'}, {'op': 'ret', 'args': []}])])
{}
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
OrderedDict([('b1', [{'args': ['i', 'j', 'cols'], 'dest': 'index.0', 'funcs': ['mat_packed_index'], 'op': 'call', 'type': 'int'}, {'args': ['m', 'index.0'], 'dest': 'ret_val.0', 'funcs': ['bitsel'], 'op': 'call', 'type': 'bool'}, {'args': ['ret_val.0'], 'labels': ['ret_one', 'ret_zero'], 'op': 'br'}]), ('ret_one', [{'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'args': ['one.0'], 'op': 'ret'}]), ('ret_zero', [{'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['zero.0'], 'op': 'ret'}])])
{}
OrderedDict([('b1', [{'args': ['i', 'cols'], 'dest': 'index.0', 'op': 'mul', 'type': 'int'}, {'args': ['index.0', 'j'], 'dest': 'index.1', 'op': 'add', 'type': 'int'}, {'args': ['index.1'], 'op': 'ret'}])])
{}
OrderedDict([('b1', [{'op': 'undef', 'type': 'bool', 'dest': 'i_lt_n.init'}, {'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'dest': 'two.0', 'op': 'const', 'type': 'int', 'value': 2}, {'dest': 'i.0', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'result.0', 'op': 'const', 'type': 'int', 'value': 1}, {'op': 'jmp', 'labels': ['loop']}]), ('loop', [{'op': 'phi', 'dest': 'result.1', 'type': 'int', 'args': ['result.0', 'result.2', 'b1', 'multiply']}, {'op': 'phi', 'dest': 'i_lt_n.0', 'type': 'bool', 'args': ['i_lt_n.init', 'i_lt_n.1', 'b1', 'multiply']}, {'op': 'phi', 'dest': 'i.1', 'type': 'int', 'args': ['i.0', 'i.2', 'b1', 'multiply']}, {'args': ['i.1', 'n'], 'dest': 'i_lt_n.1', 'op': 'lt', 'type': 'bool'}, {'args': ['i_lt_n.1'], 'labels': ['multiply', 'return'], 'op': 'br'}]), ('multiply', [{'args': ['result.1', 'two.0'], 'dest': 'result.2', 'op': 'mul', 'type': 'int'}, {'args': ['i.1', 'one.0'], 'dest': 'i.2', 'op': 'add', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}]), ('return', [{'args': ['result.1'], 'op': 'ret'}])])
{}
phi_None
phi_None
phi_None
OrderedDict([('b1', [{'op': 'undef', 'type': 'bool', 'dest': 'i_eq_zero.init'}, {'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'dest': 'two.0', 'op': 'const', 'type': 'int', 'value': 2}, {'op': 'jmp', 'labels': ['loop']}]), ('loop', [{'op': 'phi', 'dest': 'm.0', 'type': 'int', 'args': ['m', 'm.1', 'b1', 'divide']}, {'op': 'phi', 'dest': 'i_eq_zero.0', 'type': 'bool', 'args': ['i_eq_zero.init', 'i_eq_zero.1', 'b1', 'divide']}, {'op': 'phi', 'dest': 'i.0', 'type': 'int', 'args': ['i', 'i.1', 'b1', 'divide']}, {'args': ['i.0', 'zero.0'], 'dest': 'i_eq_zero.1', 'op': 'eq', 'type': 'bool'}, {'args': ['i_eq_zero.1'], 'labels': ['return', 'divide'], 'op': 'br'}]), ('divide', [{'args': ['m.0', 'two.0'], 'dest': 'm.1', 'op': 'div', 'type': 'int'}, {'args': ['i.0', 'one.0'], 'dest': 'i.1', 'op': 'sub', 'type': 'int'}, {'labels': ['loop'], 'op': 'jmp'}]), ('return', [{'args': ['m.0'], 'dest': 'm_bit.0', 'funcs': ['is_odd'], 'op': 'call', 'type': 'bool'}, {'args': ['m_bit.0'], 'op': 'ret'}])])
{}
phi_None
phi_None
phi_None
OrderedDict([('b1', [{'dest': 'zero.0', 'op': 'const', 'type': 'int', 'value': 0}, {'args': ['n', 'zero.0'], 'dest': 'is_neg.0', 'op': 'lt', 'type': 'bool'}, {'args': ['is_neg.0'], 'labels': ['negative', 'positive'], 'op': 'br'}]), ('negative', [{'args': ['zero.0', 'n'], 'dest': 'n.0', 'op': 'sub', 'type': 'int'}, {'op': 'jmp', 'labels': ['positive']}]), ('positive', [{'op': 'phi', 'dest': 'n.1', 'type': 'int', 'args': ['n', 'n.0', 'b1', 'negative']}, {'args': ['n.1'], 'op': 'ret'}])])
{}
phi_None
OrderedDict([('b1', [{'args': ['n'], 'dest': 'n0.0', 'funcs': ['abs'], 'op': 'call', 'type': 'int'}, {'dest': 'one.0', 'op': 'const', 'type': 'int', 'value': 1}, {'dest': 'two.0', 'op': 'const', 'type': 'int', 'value': 2}, {'args': ['n0.0', 'one.0'], 'dest': 'np1.0', 'op': 'add', 'type': 'int'}, {'args': ['n0.0', 'two.0'], 'dest': 'half.0', 'op': 'div', 'type': 'int'}, {'args': ['np1.0', 'two.0'], 'dest': 'np1_half.0', 'op': 'div', 'type': 'int'}, {'args': ['half.0', 'np1_half.0'], 'dest': 'ret_val.0', 'op': 'eq', 'type': 'bool'}, {'args': ['ret_val.0'], 'op': 'ret'}])])
{}
OrderedDict([('b1', [{'args': ['n'], 'dest': 'is_even.0', 'funcs': ['is_even'], 'op': 'call', 'type': 'bool'}, {'args': ['is_even.0'], 'dest': 'ret_val.0', 'op': 'not', 'type': 'bool'}, {'args': ['ret_val.0'], 'op': 'ret'}])])
{}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
b
1
r
o
w
_
l
o
o
p
c
o
l
_
l
o
o
p
i
n
n
e
r
_
l
o
o
p
m
u
l
t
i
p
l
y
e
n
d
_
c
o
l
a
d
d
_
d
p
r
e
t
u
r
n
{}
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
phi_None
b
1
r
e
t
_
o
n
e
r
e
t
_
z
e
r
o
{}
b
1
{}
b
1
l
o
o
p
m
u
l
t
i
p
l
y
r
e
t
u
r
n
{}
phi_None
phi_None
phi_None
b
1
l
o
o
p
d
i
v
i
d
e
r
e
t
u
r
n
{}
phi_None
phi_None
phi_None
b
1
n
e
g
a
t
i
v
e
p
o
s
i
t
i
v
e
{}
phi_None
b
1
{}
b
1
{}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py
{'k_lt_dim2.init': 'b1', 'k.init': 'b1', 'j_lt_dim3.init': 'b1', 'j.init': 'b1', 'index.init': 'b1', 'i_lt_dim1.init': 'b1', 'dp_bit.init': 'b1', 'dot_product_odd.init': 'b1', 'dot_product.init': 'b1', 'b_bit.init': 'b1', 'a_bit_b_bit.init': 'b1', 'a_bit.init': 'b1', 'one.0': 'b1', 'i.0': 'b1', 'output.0': 'b1', 'output.1': 'row_loop', 'k_lt_dim2.0': 'row_loop', 'k.0': 'row_loop', 'j_lt_dim3.0': 'row_loop', 'j.0': 'row_loop', 'index.0': 'row_loop', 'i_lt_dim1.0': 'row_loop', 'i.1': 'row_loop', 'dp_bit.0': 'row_loop', 'dot_product_odd.0': 'row_loop', 'dot_product.0': 'row_loop', 'b_bit.0': 'row_loop', 'a_bit_b_bit.0': 'row_loop', 'a_bit.0': 'row_loop', 'j.1': 'row_loop', 'i.2': 'row_loop', 'i_lt_dim1.1': 'row_loop', 'output.2': 'col_loop', 'k_lt_dim2.1': 'col_loop', 'k.1': 'col_loop', 'j_lt_dim3.1': 'col_loop', 'j.2': 'col_loop', 'index.1': 'col_loop', 'dp_bit.1': 'col_loop', 'dot_product_odd.1': 'col_loop', 'dot_product.1': 'col_loop', 'b_bit.1': 'col_loop', 'a_bit_b_bit.1': 'col_loop', 'a_bit.1': 'col_loop', 'k.2': 'col_loop', 'j.3': 'col_loop', 'dot_product.2': 'col_loop', 'j_lt_dim3.2': 'col_loop', 'k_lt_dim2.2': 'inner_loop', 'k.3': 'inner_loop', 'dot_product.3': 'inner_loop', 'b_bit.2': 'inner_loop', 'a_bit_b_bit.2': 'inner_loop', 'a_bit.2': 'inner_loop', 'k.4': 'inner_loop', 'k_lt_dim2.3': 'inner_loop', 'a_bit.3': 'multiply', 'b_bit.3': 'multiply', 'a_bit_b_bit.3': 'multiply', 'dot_product.4': 'multiply', 'dot_product_odd.2': 'end_col', 'index.2': 'add_dp', 'dp_bit.2': 'add_dp', 'output.3': 'add_dp'}
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_row_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_col_loop
phi_inner_loop
phi_inner_loop
phi_inner_loop
phi_inner_loop
phi_inner_loop
phi_inner_loop
{'index.0': 'b1', 'ret_val.0': 'b1', 'one.0': 'ret_one', 'zero.0': 'ret_zero'}
{'index.0': 'b1', 'index.1': 'b1'}
{'i_lt_n.init': 'b1', 'one.0': 'b1', 'two.0': 'b1', 'i.0': 'b1', 'result.0': 'b1', 'result.1': 'loop', 'i_lt_n.0': 'loop', 'i.1': 'loop', 'i_lt_n.1': 'loop', 'result.2': 'multiply', 'i.2': 'multiply'}
phi_loop
phi_loop
phi_loop
{'i_eq_zero.init': 'b1', 'zero.0': 'b1', 'one.0': 'b1', 'two.0': 'b1', 'm.0': 'loop', 'i_eq_zero.0': 'loop', 'i.0': 'loop', 'i_eq_zero.1': 'loop', 'm.1': 'divide', 'i.1': 'divide', 'm_bit.0': 'return'}
phi_loop
phi_loop
phi_loop
{'zero.0': 'b1', 'is_neg.0': 'b1', 'n.0': 'negative', 'n.1': 'positive'}
phi_positive
{'n0.0': 'b1', 'one.0': 'b1', 'two.0': 'b1', 'np1.0': 'b1', 'half.0': 'b1', 'np1_half.0': 'b1', 'ret_val.0': 'b1'}
{'is_even.0': 'b1', 'ret_val.0': 'b1'}
bril2json < benchmarks/core/gebmm.bril | python cs6120/final/gvn.py | brili -p 2791 57 4 3 2
188
total_dyn_inst: 4599
